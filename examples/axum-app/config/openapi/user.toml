name = "Users"

[[endpoints]]
path = "/user/new"
method = "POST"
summary = "Creates a new user"

[endpoints.body]
schema = "/user/definition"

[[endpoints]]
path = "/user/{user_id}/delete"
method = "POST"
summary = "Deletes a user by ID"

[[endpoints]]
path = "/user/{user_id}/update"
method = "POST"
summary = "Updates a user by ID"

[endpoints.body]
schema = "userInfo"

[[endpoints]]
path = "/user/{user_id}/view"
method = "GET"
summary = "Gets a user by ID"

[[endpoints]]
path = "/user/list"
method = "GET"
summary = "Finds a list of users"

[endpoints.query]
roles = { type = "string", description = "User roles" }
tags = { type = "string", description = "User tags" }

[[endpoints]]
path = "/user/import"
method = "POST"
summary = "Imports the user data"

[endpoints.body]
schema = "userData"

[[endpoints]]
path = "/user/export"
method = "GET"
summary = "Exports the user data"

[endpoints.query]
format = { type = "string", enum = ["csv", "json", "jsonlines", "msgpack"], default = "json", description = "File format" }
roles = { type = "string", description = "User roles" }
tags = { type = "string", description = "User tags" }

[schemas.userId]
type = "integer"
description = "User ID"

[schemas.newUser]
type = "object"
required = ["name", "roles", "account", "password"]
name = { type = "string", description = "User name" }
roles = { type = "array", items = "string", example = ["admin"], description = "User roles" }
account = { type = "string", description = "User account" }
password = { type = "string", format = "password", description = "User password" }
tags = { type = "array", items = "integer", description = "User tags" }

[schemas.userInfo]
type = "object"
name = { type = "string", description = "User name" }
status = { type = "string", enum = ["Active", "Inactive", "Locked", "Deleted"], description = "User status" }
roles = { type = "string", items = "string", description = "User roles" }
tags = { type = "array", items = "integer", description = "User tags" }

[schemas.userData]
type = "array"
items = "object"
required = ["name", "roles", "account", "password"]
name = { type = "string", description = "User name" }
roles = { type = "array", items = "string", example = ["admin"], description = "User roles" }
account = { type = "string", description = "User account" }
password = { type = "string", format = "password", description = "User password" }
tags = { type = "array", items = "integer", description = "User tags" }

[models.user.status]
translations = [
    ["Active", "ðŸ˜„"],
    ["Inactive", "ðŸ˜´"],
]

[models.user.roles]
translations = [
    ["admin", "ðŸ‘®"],
    ["worker", "ðŸ‘·"],
]

[models.user.updated_at]
translations = [
    ["$span:24h", "Updated within 1 day"],
    ["$span:7d", "Updated within 1 week"],
]

