[[endpoints]]
path = "/user/new"
method = "POST"
description = "Creates a new user"

[endpoints.requestBody]
schema = "newUser"

[[endpoints]]
path = "/user/{user_id}/delete"
method = "POST"

[[endpoints]]
path = "/user/{user_id}/update"
method = "POST"

[endpoints.requestBody]
schema = "userInfo"

[[endpoints]]
path = "/user/{user_id}/view"
method = "GET"

[[endpoints]]
path = "/user/list"
method = "GET"

[endpoints.query]
roles = { type = "string", description = "User roles" }
tags = { type = "string", description = "User tags" }

[[endpoints]]
path = "/user/import"
method = "POST"

[endpoints.requestBody]
schema = "userData"

[[endpoints]]
path = "/user/export"
method = "GET"

[endpoints.query]
roles = { type = "string", description = "User roles" }
tags = { type = "string", description = "User tags" }

[schemas.userId]
type = "string"
format = "uuid"
description = "User ID"

[schemas.newUser]
type = "object"
required = ["name", "roles", "account", "password"]
name = { type = "string", description = "User name" }
roles = { type = "array", items = "string", example = ["admin"], description = "User roles" }
account = { type = "string", description = "User account" }
password = { type = "string", format = "password", description = "User password" }
tags = { type = "array", items = { type = "string", format = "uuid" }, description = "User tags" }

[schemas.userInfo]
type = "object"
name = { type = "string", description = "User name" }
status = { type = "string", enum = ["Active", "Inactive", "Locked", "Deleted"], description = "User status" }
roles = { type = "string", description = "User roles" }
tags = { type = "string", description = "User tags" }

[schemas.userData]
type = "array"
items = "object"
required = ["name", "roles", "account", "password"]
name = { type = "string", description = "User name" }
roles = { type = "array", items = "string", example = ["admin"], description = "User roles" }
account = { type = "string", description = "User account" }
password = { type = "string", format = "password", description = "User password" }
tags = { type = "array", items = { type = "string", format = "uuid" }, description = "User tags" }
